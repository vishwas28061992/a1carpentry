@model A1Carpentry.Models.JobsModel
@{
    ViewBag.Title = "moretasksadded";
}
<h2>moretasksadded</h2>
<html>
<head>
</head>
<style>
    .dropdown {
        position: relative;
        top: 24%;
        transform: translateY(-50%);
        font-family: "nunito", sans-serif;
        z-index: 99;
    }
    .popup-content-text {
        text-align: center;
        color: #fff;
        font-size: 20px;
    }
    a {
        color: #fff;
    }

    .dropdown dd,
    .dropdown dt {
        margin: 0px;
        padding: 0px;
        font-weight: 300;
        font-family: "nunito", sans-serif;
    }

    .dropdown ul {
        margin: -1px 0 0 0;
    }

    .dropdown dd {
        position: relative;
    }

    .dropdown a,
    .dropdown a:visited {
        color: #575757;
        text-decoration: none;
        outline: none;
        font-size: 12px;
        font-weight: 500;
        font-family: "nunito", sans-serif;
    }

    .dropdown dt a {
        border-width: 0 0 1px;
        background-color: #fff;
        display: block;
        padding: 8px 20px 5px 10px;
        border: 1px solid #d4dae3;
        font-size: 12px;
        line-height: 1.25;
        overflow: hidden;
        width: 222px;
        color: #575757
    }

        .dropdown dt a span,
        .multiSel span {
            cursor: pointer;
            display: inline-block;
            padding: 0 3px 2px 0;
            font-weight: 500;
            color: #575757;
            font-family: "nunito", sans-serif;
        }

    .dropdown dd ul {
        background-color: #fff;
        border: 0;
        color: #575757;
        display: none;
        left: 0px;
        padding: 2px 15px 2px 5px;
        position: absolute;
        top: 2px;
        width: 220px;
        list-style: none;
        height: 100px;
        overflow: auto;
        font-family: "nunito", sans-serif;
        font-size: 12px;
    }

    .dropdown span.value {
        display: none;
    }

    .dropdown dd ul li a {
        padding: 5px;
        display: block;
        color: #575757;
    }

        .dropdown dd ul li a:hover {
            background-color: #fff;
        }

    button {
        background-color: #6BBE92;
        width: 120px;
        border: 0;
        padding: 10px 0;
        margin: 5px 0;
        text-align: center;
        color: #fff;
        font-weight: bold;
    }

    /*.combo-label {
        margin-bottom: 1.5em;
    }*/

    /*.custom-scrollbar-css::-webkit-scrollbar-thumb {
        border-radius: 1rem;
        background-color: #00d2ff;
        background-image: linear-gradient(to top, #00d2ff 0%, #3a7bd5 100%);
    }

    .my-custom-scrollbar {
        position: relative;
        height: 100px;
        overflow: auto;
    }

    .table-wrapper-scroll-y {
        display: block;
    }

    .btnplus {
        background-color: #ffd800;
        width: 38px;
        height: 38px;
        border-radius: 50px;
        font-size: 17px;
    }

    .dp-task {
        width: 180px;
    }*/
</style>
<body data-sa-theme="1">
    @using (Html.BeginForm("moretasksadded", "SuperAdmin", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
    {

        <section class="content">
            <div class="content__inner">
                <header class="content__title">
                    <h1> Create Job Profile </h1>
                </header>
                <div class="text-center">

                    <span style="display:none" id="lblError">
                        <b style="color:red">  Please select a option. </b>
                    </span>
                </div>
                <div class="card">
                    <div class="card-body">
                        <div id="container">
                            <div class="row">
                                <div class="col-md-12 table-responsive">
                                    <table class="table table-hover table-sortable" id="tab_logic">
                                        <tr id='addr0' data-id="0">

                                            <td data-name="PreTaskID" id="">
                                                @Html.DropDownListFor(m => m.PreTaskID, new SelectList(Model.lstPreTasks, "PreTaskID", "PreTaskName"), "-- Select Job Task* --", new { @class = "form-control", @readonly = "true", id = "PreTaskID", onchange = "PreTaskID_Change(this)" })
                                            </td>
                                            <td data-name="TaskDescription">
                                                @Html.TextAreaFor(m => m.TaskDescription, new { @class = "form-control", @readonly = "true", autocomplete = "off", placeholder = "Task Description*" })
                                            </td>


                                            @*<td data-name="del">
                                                    <button name="del0" class='btn btn-danger btn-createnew glyphicon glyphicon-remove row-remove'><span aria-hidden="true">Delete</span></button>
                                                </td>*@
                                        </tr>
                                    </table>

                                    <div class="row">
                                        <div class="col-lg-11 col-lg-auto float-right"> <a id="add_row" class="btn btn-primary btn-addnew btn-new float-right">Add Row</a></div>
                                    </div>
                                </div>
                                @*<div class="col-md-3">
                                        <dl class="dropdown">
                                            <dt>
                                                <a href="#">
                                                    <span class="hida">Select Tools</span>
                                                    <p class="multiSel"></p>
                                                </a>
                                            </dt>
                                            <dd>
                                                <div class="mutliSelect">
                                                    <ul>
                                                        <li>
                                                            @foreach (var item in Model.Tools)
                                                            {
                                                                if (item.ToolID > 0)
                                                                {
                                                                    <input class="" type="checkbox" id="ToolName" name="ToolName" value="@item.ToolID">@item.ToolName<br />
                                                                }
                                                            }
                                                        </li>

                                                    </ul>
                                                </div>
                                            </dd>
                                        </dl>
                                    </div>*@
                            </div>
                        </div>
                        <div class="col-sm-12 pt-5  p-3">	<div class="text-center">  <button type="button" class="open-AddBookDialog shadow-none btn btn-primary btn-new" data-toggle="modal" id="btnSubmit" onclick="Validation()" data-target="#exampleModalCenter">Submit</button> </div></div>
                    </div>
                </div>
            </div>
        </section>
        <button type="button" class="open-AddBookDialog shadow-none btn btn-primary btn-new" display="none" data-toggle="modal" id="btnpopwindow" data-target="#exampleModalCenter">Submit</button>
        <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Create Job</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p class="popup-content-text"></p>
                    </div>
                    <div class="modal-footer">

                        <button type="submit" id="Save" onclick="return SubmitDetails()" class="btn btn-primary">ok</button>
                    </div>
                </div>
            </div>
        </div>

    }
</body>
</html>
@*<script>
        debugger;
        $(".dropdown dt a").on('click', function () {
            $(".dropdown dd ul").slideToggle('fast');
        });
        $(".dropdown dd ul li a").on('click', function () {
            $(".dropdown dd ul").hide();
        });
        function getSelectedValue(id) {
            return $("#" + id).find("dt a span.value").html();
        }
        $(document).bind('click', function (e) {
            var $clicked = $(e.target);
            if (!$clicked.parents().hasClass("dropdown")) $(".dropdown dd ul").hide();
        });
        $('.mutliSelect input[type="checkbox"]').on('click', function () {
            var title = $(this).closest('.mutliSelect').find('input[type="checkbox"]').val(),
                title = $(this).val() + ",";
            if ($(this).is(':checked')) {
                var html = '<span title="' + title + '">' + title + '</span>';
                $('.multiSel').append(html);
                $(".hida").hide();
            } else {
                $('span[title="' + title + '"]').remove();
                var ret = $(".hida");
                $('.dropdown dt a').append(ret);
            }
        });
    </script>*@

<script>

    function PreTaskID_Change(Current) {
        count++;
        //var currTd = $(Current).parent().parent().children();
        //console.log($(Current).closest("tr").find('td:first textarea'))
        //var textArea = $(Current).parent().parent().find('td:first textarea');
        //var textArea = $(this).closest('tr').children('td:first textarea');
        //  var textArea = $(Current).closest("tr").find('.form-control').val();
        var textArea = $(Current).closest("tr").find('textarea');
        LoadTasksById($(Current).val(), textArea)
    }
    function LoadTasksById(PreTasksID, textArea) {
        debugger
        $.ajax({
            url: '/SuperAdmin/GetTasksByPreTasksID',
            data: { PreTasksID: PreTasksID },
            success: function (response) {
                if (response != null) {
                    textArea.html(response.PreTaskDescription);
                    //$('#TaskDescription').val(response.PreTaskDescription);
                    //$('#JobTypeID').val(response.JobTypeID);
                    // alert(JSON.stringify(response));
                } else {
                    $("p").text("Something Went Wrong");
                    document.getElementById("btnpopwindow").click();
                   // alert("Something went wrong");
                }
            },
            failure: function (response) {
                $("p").text(response.responseText);
                document.getElementById("btnpopwindow").click();
                //alert(response.responseText);
            },
            error: function (response) {
                $("p").text(response.responseText);
                document.getElementById("btnpopwindow").click();
               // alert(response.responseText);
            }
        })
    };
</script>
<script>
    var count = 0;
    $(document).ready(function () {
        $("#add_row").on("click", function () {
         
            // Dynamic Rows Code
            // Get max row id and set new id
            var newid = 0;
            $.each($("#tab_logic tr"), function () {
                if (parseInt($(this).data("id")) > newid) {
                    newid = parseInt($(this).data("id"));
                }
            });
            newid++;
            var tr = $("<tr></tr>", {
                id: "addr" + newid,
                "data-id": newid
            });
            // loop through each td and create new elements with name of newid
            $.each($("#tab_logic tbody tr:nth(0) td"), function () {
                var td;
                var cur_td = $(this);
                var children = cur_td.children();
                // add new td and element if it has a nane
                if ($(this).data("name") !== undefined) {
                    td = $("<td></td>", {
                        "data-name": $(cur_td).data("name"),
                    });
                    //var c = $(cur_td).find($(children[0]).prop('tagName')).clone().val("");
                    var c = $(cur_td).find($(children[0]).prop('tagName')).clone();
                    c.attr("name", $(cur_td).data("name"));
                    c.appendTo($(td));
                    td.appendTo($(tr));
                    $(tr).find('textarea').html('');
                } else {
                    td = $("<td></td>", {
                        'text': $('#tab_logic tr').length
                    }).appendTo($(tr));
                }
            });
            // add delete button and td
            var r = $('<input/>').attr({
                type: "button",
                id: "field",
                value: "Delete",
                class: "btn btn-danger btn-createnew glyphicon glyphicon-remove row-remove",
                onclick: "newButtonClickListener()"
            });
            $("<td></td>").append(r
                    .click(function() {
                        $(this).closest("tr").remove();
                        //   var rowCount = $('#tab_logic tr').length;
                        //if (count > 1)
                        //    if(count==rowCount)
                        //count--;
                    })
            ).appendTo($(tr));
           

            // add the new row
            $(tr).appendTo($('#tab_logic'));
            $(tr).find("td button.row-remove").on("click", function () {
               // $(this).closest("tr").remove();
                //count--;
            });
        });
        // Sortable Code
        var fixHelperModified = function (e, tr) {
            var $originals = tr.children();
            var $helper = tr.clone();
            $helper.children().each(function (index) {
                $(this).width($originals.eq(index).width())
            });
            return $helper;
        };
        $(".table-sortable tbody").sortable({
            helper: fixHelperModified
        }).disableSelection();
        $(".table-sortable thead").disableSelection();
        $("#add_row").trigger("click");
    });
</script>

<script type="text/javascript">
    $(document).on("click", ".open-AddBookDialog", function () {
        debugger;
        $('.exampleModalCenter').modal('show');
    });
</script>
<script>
    $(function () {
        debugger;
        $("#btnSubmit").click(function () {

            $('#tab_logic tr').each(function () {
                if ($(this).find('#PreTaskID').val() == null) {
                   // alert("Please select an option!");

                    return false;
                }
            });
            return true;
        });
    });
</script>
<script type="text/javascript">
    function Validation() {
        debugger;

        //var table = document.getElementById('tab_logic');
        //debugger;
        //for (var r = 0, n = table.rows.length; r < n; r++) {
        //    debugger;
        //    for (var c = 0, m = table.rows[r].cells.length; c < 1; c++) {
        //        debugger;
        //       // console.log(table.rows[r].cells[c].PreTaskID.val());
        //       // console.log(table.rows[r].cells[c].Current.PreTaskID.value());
        //        //alert(table.rows[r].cells[c].val());
        //       // alert(table.rows[r].cells[c].text());
        //        //alert(table.rows[r].cells[c].PreTaskID);
        //        alert(table.rows[r].cells[c].text());
        //    }
        //}

        var rowCount = $('#tab_logic tr').length;
        debugger;
        $('#tab_logic tr').each(function () {
            debugger;
            
            console.log($(this).find('#PreTaskID').val());
            if ($(this).find('#PreTaskID').val() == "") {
                debugger;
              //  alert("Please select an option!");
                rowCount--;
            } 

        });

        debugger;
        $("p").text("Assigned To Number of Tasks= " + rowCount);
        //alert(count);
        //console.log(count);
    }
</script>
<script type="text/javascript">


    function SubmitDetails() {
        debugger;
        var validations = true;
        debugger;
        var PreTaskID = document.getElementById("PreTaskID");
      //  alert(PreTaskID);
        debugger;
       // alert("fgjhjg");
        debugger;
        if (PreTaskID == "" || PreTaskID == null || PreTaskID == undefined) {
            debugger;
            document.getElementById("lblError").style.display = "inline";
            validations = false;
        } debugger;

        return validations
    }
</script>